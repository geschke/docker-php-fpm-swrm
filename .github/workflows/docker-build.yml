name: Docker Build and Push

on:
  push:
    branches:
      - main

env:
  # Registries for Docker Hub and GitHub Container Registry
  REGISTRY_GITHUB: ghcr.io
  REGISTRY_DOCKER_HUB: docker.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      #- name: Log into GitHub Container Registry
      #  if: github.event_name != 'pull_request'
      #  uses: docker/login-action@v2
      #  with:
      #    registry: ${{ env.REGISTRY_GITHUB }}
      #    username: ${{ github.actor }}
      #    password: ${{ secrets.GITHUB_TOKEN }}

      #- name: Log into Docker Hub
      #  if: github.event_name != 'pull_request'
      #  uses: docker/login-action@v2
      #  with:
      #    username: ${{ secrets.DOCKER_USERNAME }}
      #    password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Load image mappings
        run: |
          source ./image_mappings.sh
          echo "Image name: $IMAGE_NAME"

      - name: Build and Push Docker Images
        run: |
          source ./image_mappings.sh

          # Iterate over directories and push images only if there are changes
          for dir in "${!images[@]}"; do
            tag=${images[$dir]}

            # Read version from version.txt
            version_file="./$dir/version.txt"
            if [[ -f "$version_file" ]]; then
              version=$(cat "$version_file")
            else
              echo "Error: No version.txt found in $dir."
              exit 1
            fi

            # Full image tag including the version (hyphen for version number)
            full_tag="${tag}-${version}"
            echo "Full tag is: $full_tag ."

            # Check if there were changes in the directory
            #if git diff --name-only HEAD^ HEAD | grep -q "$dir/"; then
              # Build the Docker image and push to both Docker Hub and GHCR
              docker build -t "$REGISTRY_DOCKER_HUB/$IMAGE_NAME:$full_tag" -t "$REGISTRY_GITHUB/$IMAGE_NAME:$full_tag" ./$dir
              #docker push "$REGISTRY_DOCKER_HUB/$IMAGE_NAME:$full_tag"
              #docker push "$REGISTRY_GITHUB/$IMAGE_NAME:$full_tag"

              echo "Built and pushed $IMAGE_NAME:$full_tag to Docker Hub and GHCR."
            #else
            #  echo "No changes in $dir, skipping build and push."
            #fi
          done
